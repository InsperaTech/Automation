$uninstallResult = Invoke-Command -Session $session -ScriptBlock {
    param($oldDisplayName)
    try {
        $versionCheck = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -eq $oldDisplayName } | Select-Object Name

        if ($versionCheck -eq $null) {
            $uninstallResult = "Software doesn't exist"
        } else {
            $uninstallCommand = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -eq $oldDisplayName } | ForEach-Object { $_.Uninstall() }
            if ($uninstallCommand -eq $null) {
                return "Old version uninstalled successfully"
            } else {
                return "Failed to uninstall old version (Error code: $($uninstallCommand.ReturnValue))"
            }
        } 
    } catch {
        return "Failed to uninstall old version (Error: $_)"
    }
} -ArgumentList $oldVersionDisplayName


newversion:
-----------------------------------------
$uninstallResult = Invoke-Command -Session $session -ScriptBlock {
    param($oldDisplayName)
    try {
        $versionCheck = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -eq $oldDisplayName }

        if ($versionCheck -eq $null) {
            return "Software doesn't exist"
        } else {
            $uninstallResult = $versionCheck.Uninstall()

            if ($uninstallResult -eq $null) {
                return "Old version uninstalled successfully"
            } else {
                return "Failed to uninstall old version (Error code: $($uninstallResult.ReturnValue))"
            }
        } 
    } catch {
        return "Failed to uninstall old version (Error: $_)"
    }
} -ArgumentList $oldVersionDisplayName
